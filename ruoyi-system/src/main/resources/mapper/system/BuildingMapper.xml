<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.BuildingMapper">
    
    <resultMap type="Building" id="BuildingResult">
        <result property="id"    column="id"    />
        <result property="cellId"    column="cell_id"    />
        <result property="buildName"    column="build_name"    />
        <result property="cellNum"    column="cell_num"    />
        <result property="buildLevel"    column="build_level"    />
        <result property="buildType"    column="build_type"    />
        <result property="buildStructure"    column="build_structure"    />
        <result property="buildOrientation"    column="build_orientation"    />
        <result property="remake"    column="remake"    />
        <association property="residentialQuarters" column="cell_id" javaType="ResidentialQuarters" resultMap="ResidentialQuarters" />
    </resultMap>
        <resultMap id="ResidentialQuarters" type="ResidentialQuarters" >
            <result property="id"    column="cell_id"    />
            <result property="cellName"    column="cell_name"    />
        </resultMap>

    <sql id="selectBuildingVo">
        select b.id, b.cell_id, b.build_name, b.cell_num, b.build_level, b.build_type, b.build_structure, b.build_orientation, b.remake,
        r.id as cell_id,r.cell_name
        from building b
        left join residential_quarters r on b.cell_id = r.id
    </sql>

    <select id="selectBuildingList" parameterType="Building" resultMap="BuildingResult">
        <include refid="selectBuildingVo"/>
        <where>
            <if test="cellId != null "> and b.cell_id = #{cellId}</if>
            <if test="buildName != null and buildName != ''"> and b.build_name like concat('%', #{buildName}, '%')</if>
            <if test="cellNum != null "> and b.cell_num = #{cellNum}</if>
            <if test="buildLevel != null and buildLevel != ''"> and b.build_level = #{buildLevel}</if>
            <if test="buildType != null  and buildType != ''"> and b.build_type = #{buildType}</if>
            <if test="buildStructure != null  and buildStructure != ''"> and b.build_structure = #{buildStructure}</if>
            <if test="buildOrientation != null  and buildOrientation != ''"> and b.build_orientation = #{buildOrientation}</if>
            <if test="remake != null  and remake != ''"> and b.remake = #{remake}</if>
        </where>
    </select>
    
    <select id="selectBuildingById" parameterType="Integer" resultMap="BuildingResult">
        <include refid="selectBuildingVo"/>
        where b.id = #{id}
    </select>
        
    <insert id="insertBuilding" parameterType="Building" useGeneratedKeys="true" keyProperty="id">
        insert into building
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="cellId != null ">cell_id,</if>
            <if test="buildName != null">build_name,</if>
            <if test="cellNum != null ">cell_num,</if>
            <if test="buildLevel != null and buildLevel != ''">build_level,</if>
            <if test="buildType != null  and buildType != ''">build_type,</if>
            <if test="buildStructure != null  and buildStructure != ''">build_structure,</if>
            <if test="buildOrientation != null  and buildOrientation != ''">build_orientation,</if>
            <if test="remake != null  and remake != ''">remake,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="cellId != null ">#{cellId},</if>
            <if test="buildName != null and buildName != ''">#{buildName},</if>
            <if test="cellNum != null ">#{cellNum},</if>
            <if test="buildLevel != null and buildLevel != ''">#{buildLevel},</if>
            <if test="buildType != null  and buildType != ''">#{buildType},</if>
            <if test="buildStructure != null  and buildStructure != ''">#{buildStructure},</if>
            <if test="buildOrientation != null  and buildOrientation != ''">#{buildOrientation},</if>
            <if test="remake != null  and remake != ''">#{remake},</if>
         </trim>
    </insert>

    <update id="updateBuilding" parameterType="Building">
        update building
        <trim prefix="SET" suffixOverrides=",">
            <if test="cellId != null ">cell_id = #{cellId},</if>
            <if test="buildName != null and buildName != ''">build_name = #{buildName},</if>
            <if test="cellNum != null ">cell_num = #{cellNum},</if>
            <if test="buildLevel != null and buildLevel != ''">build_level = #{buildLevel},</if>
            <if test="buildType != null  and buildType != ''">build_type = #{buildType},</if>
            <if test="buildStructure != null  and buildStructure != ''">build_structure = #{buildStructure},</if>
            <if test="buildOrientation != null  and buildOrientation != ''">build_orientation = #{buildOrientation},</if>
            <if test="remake != null  and remake != ''">remake = #{remake},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteBuildingById" parameterType="Integer">
        delete from building where id = #{id}
    </delete>

    <delete id="deleteBuildingByIds" parameterType="String">
        delete from building where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <select id="selectIdAndBuildName" parameterType="Building" resultMap="BuildingResult">
       select id, build_name from building
    </select>
</mapper>