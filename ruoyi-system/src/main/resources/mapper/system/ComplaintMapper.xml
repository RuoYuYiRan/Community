<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.ComplaintMapper">

    <resultMap type="Complaint" id="ComplaintResult">
        <result property="id"    column="id"    />
        <result property="cellId"    column="cell_id"    />
        <result property="buildId"    column="build_id"    />
        <result property="houseId"    column="house_id"    />
        <result property="address"    column="address"    />
        <result property="tellPhone"    column="tell_phone"    />
        <result property="complaintInstructions"    column="complaint_instructions"    />
        <result property="remark"    column="remark"    />
        <result property="status"    column="status"    />
        <result property="createTime"    column="create_time"    />
        <result property="endTime"    column="end_time"    />
        <result property="feedback"    column="feedback"    />
        <association property="residentialQuarters" column="cell_id" javaType="ResidentialQuarters" resultMap="ResidentialQuarters" />
        <association property="building" column="build_id" javaType="Building" resultMap="Building" />
        <association property="house" column="house_id" javaType="House" resultMap="House" />
    </resultMap>
    <resultMap id="ResidentialQuarters" type="ResidentialQuarters" >
        <result property="id"    column="cell_id"    />
        <result property="cellName"    column="cell_name"    />
    </resultMap>

    <resultMap id="Building" type="Building" >
        <result property="id"    column="build_id"    />
        <result property="buildName"    column="build_name"    />
    </resultMap>

    <resultMap id="House" type="House" >
        <result property="id"    column="unit_id"    />
        <result property="unitNum"    column="unit_num"    />
    </resultMap>

    <sql id="selectComplaintVo">
         select c.id, c.cell_id, c.build_id,c.house_id, c.address, c.tell_phone, c.complaint_instructions, c.remark, c.status, c.create_time, c.end_time,c.feedback,
        r.id as cell_id, r.cell_name,b.id as build_id,b.build_name,h.id as unit_id,h.unit_num
        from complaint c
        left join residential_quarters r on c.cell_id = r.id
        left join building b on c.build_id = b.id
        left join house h on c.house_id = h.id
    </sql>

    <select id="selectComplaintList" parameterType="Complaint" resultMap="ComplaintResult">
        <include refid="selectComplaintVo"/>
        <where>
            <if test="cellId != null "> and c.cell_id = #{cellId}</if>
            <if test="buildId != null "> and c.build_id = #{buildId}</if>
            <if test="houseId != null "> and c.house_id = #{houseId}</if>
            <if test="address != null  and address != ''"> and c.address = #{address}</if>
            <if test="tellPhone != null  and tellPhone != ''"> and c.tell_phone = #{tellPhone}</if>
            <if test="complaintInstructions != null  and complaintInstructions != ''"> and c.compalint_instructions = #{complaintInstructions}</if>
            <if test="remark != null  and remark != ''"> and c.remark = #{remark}</if>
            <if test="status != null  and status != ''"> and c.status = #{status}</if>
            <if test="endTime != null "> and c.end_time = #{endTime}</if>
        </where>
    </select>

    <select id="selectComplaintById" parameterType="Integer" resultMap="ComplaintResult">
        <include refid="selectComplaintVo"/>
        where c.id = #{id}
    </select>

    <insert id="insertComplaint" parameterType="Complaint" useGeneratedKeys="true" keyProperty="id">
        insert into complaint
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="cellId != null ">c.cell_id,</if>
            <if test="buildId != null ">c.build_id,</if>
            <if test="houseId != null ">c.house_id,</if>
            <if test="address != null  and address != ''">c.address,</if>
            <if test="tellPhone != null  and tellPhone != ''">c.tell_phone,</if>
            <if test="complaintInstructions != null  and complaintInstructions != ''">c.Complaint_instructions,</if>
            <if test="remark != null  and remake != ''">c.remark,</if>
            c.status,
            <if test="createTime != null ">c.create_time,</if>
            <if test="endTime != null ">end_time,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="cellId != null ">#{cellId},</if>
            <if test="buildId != null ">#{buildId},</if>
            <if test="houseId != null ">#{houseId},</if>
            <if test="address != null  and address != ''">#{address},</if>
            <if test="tellPhone != null  and tellPhone != ''">#{tellPhone},</if>
            <if test="complaintInstructions != null  and complaintInstructions != ''">#{complaintInstructions},</if>
            <if test="remark != null  and remake != ''">#{remark},</if>
            0,
            <if test="createTime != null ">#{createTime},</if>
            <if test="endTime != null ">#{endTime},</if>
        </trim>
    </insert>

    <update id="updateComplaint" parameterType="Complaint">
        update complaint
        <trim prefix="SET" suffixOverrides=",">
            <if test="cellId != null ">cell_id = #{cellId},</if>
            <if test="buildId != null ">build_id = #{buildId},</if>
            <if test="houseId != null ">house_id = #{houseId},</if>
            <if test="address != null  and address != ''">address = #{address},</if>
            <if test="tellPhone != null  and tellPhone != ''">tell_phone = #{tellPhone},</if>
            <if test="complaintInstructions != null  and complaintInstructions != ''">complaint_instructions = #{complaintInstructions},</if>
            <if test="remark != null  and remark != ''">remark = #{remark},</if>
            <if test="status != null  and status != ''">status = 1,</if>
            <if test="createTime != null ">create_time = #{createTime},</if>
            end_time = sysdate(),
            feedback = #{feedback}
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteComplaintById" parameterType="Integer">
        delete from complaint where id = #{id}
    </delete>

    <delete id="deleteComplaintByIds" parameterType="String">
        delete from complaint where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    

</mapper>